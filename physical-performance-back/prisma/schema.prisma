generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model evaluations {
  id        Int       @id @default(autoincrement())
  type      String    @db.VarChar(15)
  patientId Int?
  evOrder   Int
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  patients  patients? @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model functEvs01 {
  id          Int       @id @default(autoincrement())
  type        String    @db.VarChar(10)
  patientId   Int?
  evOrder     Int
  iml01       Int
  imr01       Int
  observation String?   @db.VarChar(255)
  patients    patients? @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model functEvs02 {
  id          Int       @id @default(autoincrement())
  type        String    @db.VarChar(10)
  patientId   Int?
  evOrder     Int
  iml02       Int
  imr02       Int
  observation String?   @db.VarChar(255)
  patients    patients? @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model functEvs03 {
  id          Int       @id @default(autoincrement())
  type        String    @db.VarChar(10)
  patientId   Int?
  evOrder     Int
  iml03       String    @db.VarChar(10)
  imr03       String    @db.VarChar(10)
  observation String?   @db.VarChar(255)
  patients    patients? @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model functEvs04 {
  id          Int       @id @default(autoincrement())
  type        String    @db.VarChar(10)
  patientId   Int?
  evOrder     Int
  iml04       Int
  imr04       Int
  observation String?   @db.VarChar(255)
  patients    patients? @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model functEvs05 {
  id          Int       @id @default(autoincrement())
  type        String    @db.VarChar(10)
  patientId   Int?
  evOrder     Int
  iml05dist   Decimal   @db.Decimal(5, 1)
  imr05dist   Decimal   @db.Decimal(5, 1)
  iml05ang    Int
  imr05ang    Int
  observation String?   @db.VarChar(255)
  patients    patients? @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model functEvs06 {
  id          Int       @id @default(autoincrement())
  type        String    @db.VarChar(10)
  patientId   Int?
  evOrder     Int
  iml06quad   Decimal   @db.Decimal(5, 1)
  imr06quad   Decimal   @db.Decimal(5, 1)
  iml06isqui  Decimal   @db.Decimal(5, 1)
  imr06isqui  Decimal   @db.Decimal(5, 1)
  observation String?   @db.VarChar(255)
  patients    patients? @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model functEvs07 {
  id          Int       @id @default(autoincrement())
  type        String    @db.VarChar(10)
  patientId   Int?
  evOrder     Int
  cmj07       Int
  iml07sh     Int
  imr07sh     Int
  observation String?   @db.VarChar(255)
  patients    patients? @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model functEvs08 {
  id          Int       @id @default(autoincrement())
  type        String    @db.VarChar(10)
  patientId   Int?
  evOrder     Int
  cmj08       Decimal   @db.Decimal(5, 1)
  sj08        Decimal   @db.Decimal(5, 1)
  iml08cmjuni Decimal   @db.Decimal(5, 1)
  imr08cmjuni Decimal   @db.Decimal(5, 1)
  observation String?   @db.VarChar(255)
  patients    patients? @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model patients {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(80)
  email       String?       @db.VarChar(80)
  phone       String?       @db.VarChar(11)
  photo       String
  gender      String        @db.VarChar(1)
  birthdate   DateTime      @db.Date
  domSm       String        @db.VarChar(10)
  domIm       String        @db.VarChar(10)
  sports      String?       @db.VarChar(255)
  weight      Int
  height      Int
  evaluations evaluations[]
  functEvs01  functEvs01[]
  functEvs02  functEvs02[]
  functEvs03  functEvs03[]
  functEvs04  functEvs04[]
  functEvs05  functEvs05[]
  functEvs06  functEvs06[]
  functEvs07  functEvs07[]
  functEvs08  functEvs08[]
}
